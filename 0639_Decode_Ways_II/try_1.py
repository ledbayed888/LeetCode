class Solution:
    def numDecodings(self, s: str) -> int:
        one = {'1': 1, '2': 1, '3': 1, '4': 1, '5': 1, '6': 1, '7': 1, '8': 1, '9': 1, '*': 9}
        two = {'10': 1,'11': 1, '12': 1, '13': 1, '14': 1, '15': 1, '16': 1, '17': 1, '18': 1, '19': 1, '20': 1, '21': 1, '22': 1, '23': 1, '24': 1, '25': 1, '26': 1, '*0': 2, '*1': 2, '*2': 2, '*3': 2, '*4': 2, '*5': 2, '*6': 2, '*7': 1, '*8': 1, '*9': 1, '1*': 9, '2*': 6, '**': 15}
        
        dp = [1]
        
        dp.append(one.get(s[0], 0))
        for i in range(1, len(s)):
            pre = s[i-1]
            cur = s[i]
            dp.append(0)
            
            # one
            dp[i+1] += (dp[i] * one.get(cur, 0)) % (10**9+7)
            
            # two
            dp[i+1] += (dp[i-1] * two.get(pre+cur, 0)) % (10**9+7)
            
            pre = cur
        
        return dp[-1] % (10**9+7)
